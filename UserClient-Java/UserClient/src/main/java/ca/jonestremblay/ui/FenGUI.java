/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.jonestremblay.ui;

import ca.jonestremblay.utils.UserTracking;
import ca.jonestremblay.models.Utilisateur;
import ca.jonestremblay.services.BirthService;
import javax.xml.ws.WebServiceException;
import java.time.LocalDate;
import java.time.YearMonth;
import javax.swing.JOptionPane;




/**
 *
 * @author jonat
 */
public class FenGUI extends javax.swing.JFrame {

    boolean nameIsOk = false;

    private static String LOCAL_IP_ADDRESS;
    private static String PUBLIC_IP_ADDRESS;

    /**
     * Creates new form FenGUI
     */
    public FenGUI() {
        initComponents();
        LOCAL_IP_ADDRESS = UserTracking.getClientLocalIpAddress();
        btnPOST.setEnabled(false);
        // getPublicIPAddress();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        lblBirthDate = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        btnPOST = new javax.swing.JButton();
        btnClearResult = new javax.swing.JButton();
        lblNameError = new javax.swing.JLabel();
        calendarPanel = new com.github.lgooddatepicker.components.CalendarPanel();
        resultsLabel = new javax.swing.JLabel();
        resultsBox = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Birth Analytics - Client");
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setText("Please enter your full name");
        getContentPane().add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        lblBirthDate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblBirthDate.setForeground(new java.awt.Color(255, 255, 255));
        lblBirthDate.setText("Please pick your date of birth");
        getContentPane().add(lblBirthDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, -1, -1));

        nameTxtField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nameTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTxtFieldActionPerformed(evt);
            }
        });
        nameTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTxtFieldKeyReleased(evt);
            }
        });
        getContentPane().add(nameTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 165, -1));

        btnPOST.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnPOST.setText("I am ready to learn what fate awaits me");
        btnPOST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPOSTActionPerformed(evt);
            }
        });
        getContentPane().add(btnPOST, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 396, 60));

        btnClearResult.setBackground(new java.awt.Color(214, 217, 223));
        btnClearResult.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClearResult.setForeground(new java.awt.Color(255, 255, 255));
        btnClearResult.setIcon(new javax.swing.ImageIcon("C:\\Users\\jonat\\Downloads\\trash-2-24.png")); // NOI18N
        btnClearResult.setToolTipText("Clear");
        btnClearResult.setBorder(null);
        btnClearResult.setOpaque(false);
        btnClearResult.setContentAreaFilled(false);
        btnClearResult.setBorderPainted(false);
        btnClearResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearResultActionPerformed(evt);
            }
        });
        getContentPane().add(btnClearResult, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, 40, 70));

        lblNameError.setForeground(new java.awt.Color(255, 0, 0));
        lblNameError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblNameError, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 220, 30));

        calendarPanel.setSelectedDate(LocalDate.now());
        calendarPanel.setForeground(new java.awt.Color(214, 217, 223));
        calendarPanel.setSettings(null);
        calendarPanel.setOpaque(false);
        calendarPanel.setDisplayedYearMonth(YearMonth.of(2000, 01));
        calendarPanel.getSettings().setDateRangeLimits(LocalDate.of(1880,01,01), LocalDate.now());
        calendarPanel.getSettings().setVisibleTodayButton(false);
        calendarPanel.getSettings().setVisibleClearButton(false);
        calendarPanel.setSelectedDateWithoutShowing(null);
        getContentPane().add(calendarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 300, 203));

        resultsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultsLabel.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(resultsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 386, 360, 20));

        resultsBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultsBox.setForeground(new java.awt.Color(255, 255, 255));
        resultsBox.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(resultsBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 380, 50));

        background.setIcon(new javax.swing.ImageIcon("C:\\Users\\jonat\\Downloads\\back.png")); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    

    private void btnPOSTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPOSTActionPerformed
        String result = "";
        // User user;
        Utilisateur user = null;
        if (nameIsOk && calendarPanel.getSelectedDate() != null) {
            try {
                user = createUtilisateur();
                showResults(BirthService.getActivite(user.getBirthDate().toString()));
                String res = BirthService.AddUserToDatabase(user);
                boolean wasAdded = false;
                if (res.equals("0")){
                    wasAdded = false;
                } else {
                    wasAdded = true;
                    btnClearResult.doClick();
                }
                System.out.println("Added to database : " + String.valueOf(wasAdded));
            } catch(WebServiceException cex){
                if (cex.getMessage().contains("HTTP status code 503")){
                    resultsLabel.setText("SERVICE IS UNAVAILABLE [HTTP 503]");
                }
            } catch (Exception ex) {
                if (ex.getMessage().contains("Connection refused")){
                    resultsLabel.setText("Connection was refused : "
                            + "the service is probably not running.");
                } else {
                    System.out.println(ex.getMessage());
                }
            }
        } else if (calendarPanel.getSelectedDate() == null) {
            JOptionPane.showMessageDialog(calendarPanel,
                    "We need your date of birth before you continue :)",
                    "Missing your birthday", JOptionPane.ERROR_MESSAGE);
        } else if (!nameIsOk) {
            lblNameError.setText("Please enter your name.");
        }
    }//GEN-LAST:event_btnPOSTActionPerformed

    private void nameTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTxtFieldActionPerformed

    private void btnClearResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearResultActionPerformed
        nameTxtField.setText("");
        calendarPanel.setSelectedDate(null);
        resultsBox.setBorder(null);
        resultsBox.setText("");
    }//GEN-LAST:event_btnClearResultActionPerformed

    private void nameTxtFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTxtFieldKeyReleased
        resultsBox.setText("");
        if (nameTxtField.getText().isEmpty()) {
            nameIsOk = false;
            lblNameError.setText("Please enter your name.");
        } else {
            for (char c : nameTxtField.getText().toCharArray()) {
                if (Character.isDigit(c)) {
                    nameIsOk = false;
                    lblNameError.setText("Numbers are not accepted.");
                } else if (!Character.isLetter(c) && !Character.isDigit(c)
                        && c != '-') {
                    /* if the char is a symbol other than '-', error */
                    nameIsOk = false;
                    lblNameError.setText("You have illegal symbols.");
                } else {
                    nameIsOk = true;
                    lblNameError.setText("");
                }
            }
            if (nameTxtField.getText().length() < 3) {
                nameIsOk = false;
                lblNameError.setText("Are you sure that's your full name ?");
                lblNameError.setText("This name isn't full. Too short.");
            }
        }
    }//GEN-LAST:event_nameTxtFieldKeyReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
    }//GEN-LAST:event_formWindowOpened

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
      
    }//GEN-LAST:event_formMouseMoved

    public boolean getPublicIPAddress(){
        while (PUBLIC_IP_ADDRESS == null){
            resultsLabel.setText("Connexion en cours...");
            PUBLIC_IP_ADDRESS = UserTracking.getClientPublicIPAddress();
        }
        resultsLabel.setText("");
        btnPOST.setEnabled(true);
        if (PUBLIC_IP_ADDRESS == null){
            return false;
        } else {
            return true;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenGUI().setVisible(true);
            }
        });
    }
    
    public Utilisateur createUtilisateur(){
        Utilisateur user = new Utilisateur();
        
        user.setUserName(nameTxtField.getText());
        user.setPUBLIC_IP_Address(PUBLIC_IP_ADDRESS);
        user.setLOCAL_IP_Address(LOCAL_IP_ADDRESS);
        user.setHostName(UserTracking.getClientHostname());
        user.setEntryDate(UserTracking.getTimestamp().toString());
        LocalDate date = calendarPanel.getSelectedDate();
        user.setBirthDate(date);
        return user;
    }

    public void showResults(String results) {
        resultsBox.setBorder(javax.swing.BorderFactory.createBevelBorder(
                javax.swing.border.BevelBorder.RAISED, java.awt.Color.white,
                java.awt.Color.white, null, null));
        resultsLabel.setText(results);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton btnClearResult;
    private javax.swing.JButton btnPOST;
    private com.github.lgooddatepicker.components.CalendarPanel calendarPanel;
    private javax.swing.JLabel lblBirthDate;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameError;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JLabel resultsBox;
    private javax.swing.JLabel resultsLabel;
    // End of variables declaration//GEN-END:variables
}
